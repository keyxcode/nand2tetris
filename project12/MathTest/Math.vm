function Math.init 1
    push constant 16
    pop static 0
    push constant 16
    call Array.new 1
    pop static 1
    push constant 0
    push static 1
    add
    push constant 1
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push constant 1
    pop local 0
label Math_0
    push local 0
    push static 0
    lt
    not
    if-goto Math_1
    push local 0
    push static 1
    add
    push local 0
    push constant 1
    sub
    push static 1
    add
    pop pointer 1
    push that 0
    push local 0
    push constant 1
    sub
    push static 1
    add
    pop pointer 1
    push that 0
    add
    pop temp 0
    pop pointer 1
    push temp 0
    pop that 0
    push local 0
    push constant 1
    add
    pop local 0
    goto Math_0
label Math_1
    push constant 0
    return
function Math.multiply 3
    push constant 0
    pop local 0
    push argument 0
    pop local 1
    push constant 0
    pop local 2
label Math_2
    push local 2
    push static 0
    lt
    not
    if-goto Math_3
    push argument 1
    push local 2
    push static 1
    add
    pop pointer 1
    push that 0
    and
    push constant 0
    eq
    not
    not
    if-goto Math_5
    push local 0
    push local 1
    add
    pop local 0
    push local 0
    call Output.printInt 1
    pop temp 0
    call Output.println 0
    pop temp 0
    goto Math_4
label Math_5
label Math_4
    push local 1
    push local 1
    add
    pop local 1
    push local 2
    push constant 1
    add
    pop local 2
    goto Math_2
label Math_3
    push local 0
    return
function Math.divide 0
    push constant 1
    return
function Math.sqrt 0
    push constant 1
    return
function Math.max 0
    push constant 1
    return
function Math.min 0
    push constant 1
    return
function Math.abs 0
    push constant 1
    return