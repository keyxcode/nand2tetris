// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[3..5], a=loadRam0, b=loadRam1, c=loadRam2, d=loadRam3, e=loadRam4, f=loadRam5, g=loadRam6, h=loadRam7);
    RAM8(in=in, load=loadRam0, address=address[0..2], out=outRam0);
    RAM8(in=in, load=loadRam1, address=address[0..2], out=outRam1);
    RAM8(in=in, load=loadRam2, address=address[0..2], out=outRam2);
    RAM8(in=in, load=loadRam3, address=address[0..2], out=outRam3);
    RAM8(in=in, load=loadRam4, address=address[0..2], out=outRam4);
    RAM8(in=in, load=loadRam5, address=address[0..2], out=outRam5);
    RAM8(in=in, load=loadRam6, address=address[0..2], out=outRam6);
    RAM8(in=in, load=loadRam7, address=address[0..2], out=outRam7);
    Mux8Way16(a=outRam0, b=outRam1, c=outRam2, d=outRam3, e=outRam4, f=outRam5, g=outRam6, h=outRam7, sel=address[3..5], out=out);
}